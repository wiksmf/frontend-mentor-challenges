@mixin font-style($fs-map, $fs-breakpoints: $breakpoints) {

  @each $fs-breakpoint,
  $fs-font-style in $fs-map {
    @if $fs-breakpoint ==null {
      @include make-font-style($fs-font-style);
    }

    @else {
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }

      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-style($fs-font-style);
      }
    }
  }
}

@mixin make-font-style($fs-font-style) {
  font-family: nth($fs-font-style, 1);
  font-size: nth($fs-font-style, 2);
  font-weight: nth($fs-font-style, 3);
  line-height: nth($fs-font-style, 4);
  letter-spacing: nth($fs-font-style, 5);
}

@mixin displayFlex($direction: row, $align-items: center, $justify-content: space-between, $column-gap: 0, $row-gap: 0) {
  display: flex;
  direction: $direction;
  align-items: $align-items;
  justify-content: $justify-content;
  column-gap: $column-gap;
  row-gap: $row-gap;
}

@mixin backgroundImage($bg-url, $bg-size: contain, $bg-repeat: no-repeat, $bg-position: center) {
  background-image: url($bg-url);
  background-size: $bg-size;
  background-repeat: $bg-repeat;
  background-position: $bg-position;
}

@mixin changeBreakpointVew($device-breakpoint) {

  //640px
  @if $device-breakpoint ==tablet {
    @media only screen and (min-width: 40em) {
      @content;
    }
  }

  //1150px
  @if $device-breakpoint ==desktop {
    @media only screen and (min-width: 71.875em) {
      @content;
    }
  }
}
